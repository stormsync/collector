services:
  vault:
    hostname: vault
    container_name: vault
    image: vault:1.12.0
    environment:
      VAULT_ADDR: "http://vault:8200"
      VAULT_API_ADDR: "http://vault:8200"
      VAULT_LOCAL_CONFIG: '{"backend": {"file": {"path": "/vault/file"}},"listener": {"tcp": {"address": "vault:8200", "tls_disable": 1}}, "ui": true}'
      TZ: "America/Chicago"
    ports:
      - "8200:8200"
    volumes:
      - /Users/jc/compose-volumes/vault/file:/vault/file:rw
      - /Users/jc/compose-volumes/vault/config.hcl:/vault/config/config.hcl:rw

    cap_add:
      - IPC_LOCK
    entrypoint: vault server -dev -dev-listen-address="vault:8200" -dev-root-token-id="root"
    networks:
      - app-tier

  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '0.0.0.0:6379:6379'
    expose:
    - 6379

    command: redis-server  --save 20 1 --loglevel warning
#    volumes:
#      - /Users/jc/compose-volumes/redis/data:/data:rw
    networks:
    - app-tier


  postgresql:
    image: postgres:14
    hostname: postgresql
    volumes:
      - pg_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: "conduktor-console"
      POSTGRES_USER: "conduktor"
      POSTGRES_PASSWORD: "change_me"
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256"
    networks:
    - app-tier

  conduktor-console:
    image: conduktor/conduktor-console:1.23.0
    depends_on:
      - postgresql
    ports:
      - "8080:8080"
    volumes:
      - conduktor_data:/var/conduktor
    environment:
      CDK_DATABASE_URL: "postgresql://conduktor:change_me@postgresql:5432/conduktor-console"
      CDK_MONITORING_CORTEX-URL: http://conduktor-monitoring:9009/
      CDK_MONITORING_ALERT-MANAGER-URL: http://conduktor-monitoring:9010/
      CDK_MONITORING_CALLBACK-URL: http://conduktor-platform:8080/monitoring/api/
      CDK_MONITORING_NOTIFICATIONS-CALLBACK-URL: http://localhost:8080
      CDK_ADMIN_EMAIL: "admin@conduktor.io"
      CDK_ADMIN_PASSWORD: "admin"
    networks:
      - app-tier


  conduktor-monitoring:
    image: conduktor/conduktor-console-cortex:1.23.0
    environment:
      CDK_CONSOLE-URL: "http://conduktor-console:8080"
    networks:
    - app-tier


  zoo1:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888
    networks:
    - app-tier

  kafka1:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka1
    container_name: kafka1
    ports:
      - "0.0.0.0:9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://192.168.106.2:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: 192.168.106.2
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1
    networks:
    - app-tier

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.101.0
    command: ["--config=/etc/otel-collector.yaml"]
    volumes:
      - ./configs/otel-collector.yaml:/etc/otel-collector.yaml
    ports:
      - 4317:4317
    networks:
    - app-tier

  prometheus:
    image: prom/prometheus:v2.52.0
    volumes:
      - ./configs/prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    networks:
    - app-tier

  jaeger:
    image: jaegertracing/all-in-one:1.57
    ports:
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 4318:4318
      - 14250:14250
      - 14268:14268
      - 14269:14269
      - 9411:9411


    networks:
    - app-tier


#  collector:
#    container_name: collector
#    image: collector
#    environment:
#      VAULT_TOKEN: "root"
#      ENVIRONMENT: "upstash-development"
#    volumes:
#      - ./development/collector.yml:/etc/collector-config.yml
#    user: "1001"
#    expose:
#    - "8088"
#    depends_on:
#      - vault
#      - redis
#      - kafka1
#      - prometheus
#      - otelcol
#    networks:
#    - app-tier
#    entrypoint: ["app"]
#    deploy:
#      resources:
#        limits:
#          memory: 200m
#          cpus: "0.70"
networks:
  app-tier:
    driver: bridge

volumes:
  pg_data: {}
  conduktor_data: {}
  prometheus-data-volume:
